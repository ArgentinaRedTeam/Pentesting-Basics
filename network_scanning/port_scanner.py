import nmap
import socket

def scan_ports(target, port_range):
    """
    ¿Listo para una pequeña expedición en busca de puertos abiertos? Vamos a usar nmap, el gran explorador de puertos,
    para averiguar qué puertas tiene abiertas nuestro amigo, el host objetivo.
    ¿Quién sabe qué tesoros o secretos encontraremos?
    """
    scanner = nmap.PortScanner()  # Nuestro navegador de confianza en el vasto mar de la red

    print(f"\nAhoy! Escaneando puertos en {target}...")
    scanner.scan(target, port_range)  # Zarpamos hacia el escaneo de puertos

    print("\nPuertos abiertos:")
    for proto in scanner[target].all_protocols():  # Navegando a través de los mares de TCP y UDP
        lport = scanner[target][proto].keys()
        sorted(lport)  # Organizamos los puertos como un buen capitán ordena su tripulación
        for port in lport:
            port_info = scanner[target][proto][port]
            print(f"Puerto: {port} ({port_info['state']}) - {port_info['name']}")
            print(f"  ¡Arr! Aquí tenemos un {port_info['name']} esperando ser explorado.")

def main():
    try:
        target = input("Ingrese la dirección IP o nombre de host a escanear: ")
        socket.gethostbyname(target)  # Confirmamos que el host no sea tan misterioso como el monstruo del Lago Ness

        port_range = input("Ingrese el rango de puertos a escanear (por ejemplo, 1-1024): ")

        scan_ports(target, port_range)

    except socket.gaierror:
        print(f"Error: El mapa del tesoro es incorrecto, no se pudo encontrar el host '{target}'.")
    except nmap.PortScannerError as e:
        print(f"Error de Nmap: {e}")

if __name__ == "__main__":
    main()
    print("\n¡Exploración completa! Navegaste bien, joven explorador. Recuerda, cada puerto tiene una historia. © ART (Argentina Red Team), todos los derechos reservados.")
