import subprocess
import xml.etree.ElementTree as ET
import os

def scan_vulnerabilities(target):
    """
    ¿Preparado para descubrir los secretos y las vulnerabilidades escondidas? Utilizaremos OpenVAS, un poderoso hechicero
    en el mundo del análisis de vulnerabilidades, para iluminar los rincones oscuros de nuestro objetivo.
    """
    try:
        # Verificamos las credenciales mágicas, necesarias para invocar a nuestro hechicero OpenVAS
        if "OPENVAS_USERNAME" not in os.environ or "OPENVAS_PASSWORD" not in os.environ:
            raise ValueError("Error: Necesitamos que las variables de entorno OPENVAS_USERNAME y OPENVAS_PASSWORD estén configuradas.")

        username = os.environ["OPENVAS_USERNAME"]
        password = os.environ["OPENVAS_PASSWORD"]

        print(f"\nIniciando el ritual de escaneo en {target}...")

        # Lanzamos nuestro hechizo para desvelar las vulnerabilidades
        subprocess.run(["omp", "-u", username, "-w", password, "-iX", "Full and fast", "-t", target], check=True)

        # Conjuramos el espíritu del último escaneo
        report_id = subprocess.run(["omp", "-u", username, "-w", password, "-G"], capture_output=True, text=True).stdout.strip()

        # Invocamos el informe XML de nuestro escaneo
        report_xml = subprocess.run(["omp", "-u", username, "-w", password, "-g", report_id], capture_output=True, text=True).stdout

        # Decodificamos el grimorio de XML para revelar los misterios escondidos
        root = ET.fromstring(report_xml)
        for result in root.findall(".//result"):
            name = result.find("name").text
            threat = result.find("threat").text
            description = result.find("description").text
            print(f"\nVulnerabilidad desvelada: {name}")
            print(f"Nivel de amenaza: {threat}")
            print(f"Descripción del misterio: {description}")

    except subprocess.CalledProcessError as e:
        print(f"El hechizo falló: Error de OpenVAS: {e}")
    except ValueError as e:
        print(e)
    except KeyError as e:
        print(f"Error: La varita mágica {e} no está activada.")

def main():
    print("¡Bienvenido al teatro de la seguridad con OpenVAS!")
    print("No olvides conjurar correctamente tus variables de entorno OPENVAS_USERNAME y OPENVAS_PASSWORD.")

    target = input("Por favor, invoca la dirección IP o nombre del host a escanear: ")
    scan_vulnerabilities(target)

if __name__ == "__main__":
    main()
    print("\nExploración concluida. Recuerda: con gran poder viene gran responsabilidad. © ART (Argentina Red Team), todos los derechos reservados.")
