import paramiko
import http.server
import socketserver
import ftplib
import subprocess
import os
import getpass

def transfer_scp(archivo_local, host_remoto, usuario_remoto, clave_ssh, ruta_remota):
    """
    Transfiere tu archivo de forma segura como un espía internacional.
    Usamos SCP para asegurarnos de que tus secretos lleguen sin problemas al destino.
    """
    try:
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        if not clave_ssh:
            clave_ssh = getpass.getpass(f"Un momento de magia: ingresa la contraseña para {usuario_remoto}@{host_remoto}: ")
        ssh.connect(host_remoto, username=usuario_remoto, password=clave_ssh)
        sftp = ssh.open_sftp()
        sftp.put(archivo_local, ruta_remota)
        print("¡Voilà! Archivo transferido exitosamente a través de SCP.")
    except Exception as e:
        print(f"Ups, algo salió mal en la transferencia SCP: {e}")
    finally:
        if sftp:
            sftp.close()
        if ssh:
            ssh.close()

def transfer_http(archivo_local, puerto=8000):
    """
    ¡Es hora de un espectáculo! Configura un servidor HTTP para transferir tu archivo al estilo de una premiere de cine.
    """
    try:
        hostname = socket.gethostname()
        ip_local = socket.gethostbyname(hostname)
        handler = http.server.SimpleHTTPRequestHandler
        with socketserver.TCPServer(("", puerto), handler) as httpd:
            print(f"Sirviendo el archivo '{archivo_local}' como si fuera un café en http://{ip_local}:{puerto}/")
            print("Para descargar, simplemente visita esta URL en un navegador web en la máquina remota.")
            while True:
                httpd.handle_request()
                if not os.path.exists(archivo_local):
                    break
            print("¡Show terminado! Archivo transferido exitosamente a través de HTTP.")
    except Exception as e:
        print(f"Error en el espectáculo HTTP: {e}")

def transfer_ftp(archivo_local, host_remoto, usuario_remoto, contraseña_ftp, ruta_remota):
    """
    Como un viejo marinero, navegamos por el protocolo FTP para llevar tu archivo a puerto seguro.
    """
    try:
        ftp = ftplib.FTP(host_remoto)
        ftp.login(usuario_remoto, contraseña_ftp)
        with open(archivo_local, 'rb') as file:
            ftp.storbinary(f'STOR {ruta_remota}', file)
        print("¡Y el tesoro ha sido enterrado! Archivo transferido exitosamente a través de FTP.")
    except Exception as e:
        print(f"Tormenta en alta mar durante la transferencia FTP: {e}")
    finally:
        if ftp:
            ftp.quit()

def transfer_netcat(archivo_local, host_remoto, puerto):
    """
    Usamos Netcat, el ninja de la transferencia de archivos, para una misión sigilosa y rápida.
    """
    try:
        print(f"En la máquina remota, prepara tu dojo con: nc -l -p {puerto} > {os.path.basename(archivo_local)}")
        input("Cuando el maestro Netcat esté listo en la máquina remota, presiona Enter para comenzar: ")
        subprocess.run(["nc", host_remoto, str(puerto)], input=open(archivo_local, "rb").read())
        print("¡Misión cumplida! Archivo transferido exitosamente a través de Netcat.")
    except Exception as e:
        print(f"¡Ay! Un golpe inesperado durante la transferencia Netcat: {e}")

def main():
    print("¡Bienvenido al festival internacional de transferencias de archivos!")
    print("1. SCP (Secure Copy Protocol)")
    print("2. HTTP (HyperText Transfer Protocol)")
    print("3. FTP (File Transfer Protocol)")
    print("4. Netcat")

    opcion = input("Elige tu método de transferencia favorito: ")

    archivo_local = input("Primero, dime qué archivo quieres enviar al mundo: ")

    if opcion == '1':  # SCP
        host_remoto = input("¿Cuál es el destino de tu misión SCP? (IP o nombre de host): ")
        usuario_remoto = input("¿Quién recibirá el archivo en el otro lado? (usuario): ")
        clave_ssh = getpass.getpass("Si es un secreto, ingresa la clave SSH (o deja en blanco): ")
        ruta_remota = input("Finalmente, ¿dónde debemos dejar el archivo?: ")
        transfer_scp(archivo_local, host_remoto, usuario_remoto, clave_ssh, ruta_remota)

    elif opcion == '2':  # HTTP
        puerto = int(input("Elige un puerto para tu premier HTTP (8000 por defecto): ") or 8000)
        transfer_http(archivo_local, puerto)

    elif opcion == '3':  # FTP
        host_remoto = input("¿A qué puerto seguro llevaremos tu carga? (IP o nombre de host): ")
        usuario_remoto = input("¿Quién es el capitán en el destino? (usuario): ")
        contraseña_ftp = getpass.getpass("Dame la contraseña para el cofre del tesoro FTP: ")
        ruta_remota = input("¿Dónde escondemos el tesoro en el barco?: ")
        transfer_ftp(archivo_local, host_remoto, usuario_remoto, contraseña_ftp, ruta_remota)

    elif opcion == '4':  # Netcat
        host_remoto = input("¿Cuál es el dojo para nuestra operación ninja? (IP o nombre de host): ")
        puerto = int(input("Elige el puerto para la sombra de Netcat: "))
        transfer_netcat(archivo_local, host_remoto, puerto)

    else:
        print("Parece que elegiste una opción que no está en nuestro mapa. Vuelve a intentarlo.")

if __name__ == "__main__":
    main()
    print("\n¡Gracias por usar nuestro servicio de transferencia de archivos! Recuerda, mover archivos puede ser una aventura épica. © ART (Argentina Red Team), todos los derechos reservados.")
